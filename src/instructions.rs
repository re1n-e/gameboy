#[derive(Clone)]
pub enum AddrMode {
    AmImp,
    AmRD16,
    AmRt,
    AmMrr,
    AmR,
    AmRr,
    AmRD8,
    AmRMr,
    AmRhli,
    AmRhld,
    AmHlir,
    AmHldr,
    AmRa8,
    AmA8r,
    AmHlspr,
    AmD16,
    AmD8,
    AmD16r,
    AmMrd8,
    AmMr,
    AmA16r,
    AmRa16,
}

#[derive(Clone)]
pub enum RegType {
    RtNone,
    RtA,
    RtF,
    RtB,
    RtC,
    RtD,
    RtE,
    RtH,
    RtL,
    RtAf,
    RtBc,
    RtDe,
    RtHl,
    RtSp,
    RtPc,
}

#[derive(Clone)]
pub enum InType {
    InNone,
    InNop,
    InLd,
    InInc,
    InDec,
    InRlca,
    InAdd,
    InRrca,
    InStop,
    InRla,
    InJr,
    InRra,
    InDaa,
    InCpl,
    InScf,
    InCcf,
    InHalt,
    InAdc,
    InSub,
    InSbc,
    InAnd,
    InXor,
    InOr,
    InCp,
    InPop,
    InJp,
    InPush,
    InRet,
    InCb,
    InCall,
    InReti,
    InLdh,
    InJphl,
    InDi,
    InEi,
    InRst,
    InErr,
    //CB instructions...
    InRlc,
    InRrc,
    InRl,
    InRr,
    InSla,
    InSra,
    InSwap,
    InSrl,
    InBit,
    InRes,
    InSet,
}

#[derive(Clone)]
pub enum CondType {
    CtNone,
    CtNz,
    CtZ,
    CtNc,
    CtC,
}

#[derive(Clone)]
pub struct Instruction {
    pub type_in: InType,
    pub mode: AddrMode,
    pub reg_1: RegType,
    pub reg_2: RegType,
    pub cond: CondType,
    pub param: u8,
}

pub fn instruction_by_opcode(opcode: u8) -> Option<Instruction> {
    match opcode {
        0x00 => Some(Instruction {
            type_in: InType::InNop,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x01 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD16,
            reg_1: RegType::RtBc,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x02 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtBc,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x03 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtBc,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x04 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtB,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x05 => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtB,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x06 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtB,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x07 => Some(Instruction {
            type_in: InType::InRlca,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x08 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmA16r,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtSp,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x09 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtBc,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x0A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtBc,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x0B => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtBc,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x0C => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtC,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x0D => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtC,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x0E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtC,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x0F => Some(Instruction {
            type_in: InType::InRrca,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),

        // 0x1X
        0x10 => Some(Instruction {
            type_in: InType::InStop,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x11 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD16,
            reg_1: RegType::RtDe,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x12 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtDe,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x13 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtDe,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x14 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtD,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x15 => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtD,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x16 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtD,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x17 => Some(Instruction {
            type_in: InType::InRla,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x18 => Some(Instruction {
            type_in: InType::InJr,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x19 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtDe,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x1A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtDe,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x1B => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtDe,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x1C => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtE,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x1D => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtE,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x1E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtE,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x1F => Some(Instruction {
            type_in: InType::InRra,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),

        // 0x2X
        0x20 => Some(Instruction {
            type_in: InType::InJr,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNz,
            param: 0,
        }),
        0x21 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD16,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x22 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmHlir,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x23 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x24 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtH,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x25 => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtH,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x26 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtH,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x28 => Some(Instruction {
            type_in: InType::InJr,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtZ,
            param: 0,
        }),
        0x29 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x2A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRhli,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x2B => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x2C => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtL,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x2D => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtL,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x2E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtL,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),

        // 0x3X
        0x30 => Some(Instruction {
            type_in: InType::InJr,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNc,
            param: 0,
        }),
        0x31 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD16,
            reg_1: RegType::RtSp,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x32 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmHldr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x33 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtSp,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x34 => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmMr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x35 => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmMr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x36 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrd8,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x38 => Some(Instruction {
            type_in: InType::InJr,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtC,
            param: 0,
        }),
        0x39 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtSp,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x3A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRhld,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x3B => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtSp,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x3C => Some(Instruction {
            type_in: InType::InInc,
            mode: AddrMode::AmR,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x3D => Some(Instruction {
            type_in: InType::InDec,
            mode: AddrMode::AmR,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x3E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),

        // 0x4X
        0x40 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtB,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x41 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtB,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x42 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtB,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x43 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtB,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x44 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtB,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x45 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtB,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x46 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtB,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x47 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtB,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x48 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtC,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x49 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtC,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x4A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtC,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x4B => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtC,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x4C => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtC,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x4D => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtC,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x4E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtC,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x4F => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtC,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x50 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtD,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x51 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtD,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x52 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtD,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x53 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtD,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x54 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtD,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x55 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtD,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x56 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtD,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x57 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtD,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x58 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtE,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x59 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtE,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x5A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtE,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x5B => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtE,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x5C => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtE,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x5D => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtE,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x5E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtE,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x5F => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtE,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),

        // 0x6X
        0x60 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtH,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x61 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtH,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x62 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtH,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x63 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtH,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x64 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtH,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x65 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtH,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x66 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtH,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x67 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtH,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x68 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtL,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x69 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtL,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x6A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtL,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x6B => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtL,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x6C => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtL,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x6D => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtL,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x6E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtL,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x6F => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtL,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x70 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x71 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x72 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x73 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x74 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x75 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x76 => Some(Instruction {
            type_in: InType::InHalt,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x77 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x78 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x79 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x7A => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x7B => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x7C => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x7D => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x7E => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x7F => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x80 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x81 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x82 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x83 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x84 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x85 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x86 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x87 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x88 => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x89 => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x8A => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x8B => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x8C => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x8D => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x8E => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x8F => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x90 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x91 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x92 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x93 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x94 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x95 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x96 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x97 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x98 => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x99 => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x9A => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x9B => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x9C => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x9D => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x9E => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0x9F => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA0 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA1 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA2 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA3 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA4 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA5 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA6 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA7 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA8 => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xA9 => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xAA => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xAB => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xAC => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xAD => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xAE => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xAF => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB0 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB1 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB2 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB3 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB4 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB5 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB6 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB7 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB8 => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtB,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xB9 => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xBA => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtD,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xBB => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtE,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xBC => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtH,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xBD => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtL,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xBE => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xBF => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmRt,
            reg_1: RegType::RtA,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),

        0xC0 => Some(Instruction {
            type_in: InType::InRet,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNz,
            param: 0,
        }),
        0xC1 => Some(Instruction {
            type_in: InType::InPop,
            mode: AddrMode::AmR,
            reg_1: RegType::RtBc,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xC2 => Some(Instruction {
            type_in: InType::InJp,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNz,
            param: 0,
        }),
        0xC3 => Some(Instruction {
            type_in: InType::InJp,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xC4 => Some(Instruction {
            type_in: InType::InCall,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNz,
            param: 0,
        }),
        0xC5 => Some(Instruction {
            type_in: InType::InPush,
            mode: AddrMode::AmR,
            reg_1: RegType::RtBc,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xC6 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRa8,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xC7 => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x00,
        }),
        0xC8 => Some(Instruction {
            type_in: InType::InRet,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtZ,
            param: 0,
        }),
        0xC9 => Some(Instruction {
            type_in: InType::InRet,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xCA => Some(Instruction {
            type_in: InType::InJp,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtZ,
            param: 0,
        }),
        0xCB => Some(Instruction {
            type_in: InType::InCb,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xCC => Some(Instruction {
            type_in: InType::InCall,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtZ,
            param: 0,
        }),
        0xCD => Some(Instruction {
            type_in: InType::InCall,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xCE => Some(Instruction {
            type_in: InType::InAdc,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xCF => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x08,
        }),
        0xD0 => Some(Instruction {
            type_in: InType::InRet,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNc,
            param: 0,
        }),
        0xD1 => Some(Instruction {
            type_in: InType::InPop,
            mode: AddrMode::AmR,
            reg_1: RegType::RtDe,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xD2 => Some(Instruction {
            type_in: InType::InJp,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNc,
            param: 0,
        }),
        0xD4 => Some(Instruction {
            type_in: InType::InCall,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNc,
            param: 0,
        }),
        0xD5 => Some(Instruction {
            type_in: InType::InPush,
            mode: AddrMode::AmR,
            reg_1: RegType::RtDe,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xD6 => Some(Instruction {
            type_in: InType::InSub,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xD7 => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x10,
        }),
        0xD8 => Some(Instruction {
            type_in: InType::InRet,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtC,
            param: 0,
        }),
        0xD9 => Some(Instruction {
            type_in: InType::InReti,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xDA => Some(Instruction {
            type_in: InType::InJp,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtC,
            param: 0,
        }),
        0xDC => Some(Instruction {
            type_in: InType::InCall,
            mode: AddrMode::AmD16,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtC,
            param: 0,
        }),
        0xDE => Some(Instruction {
            type_in: InType::InSbc,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xDF => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x18,
        }),
        
        //0xEX
        0xE0 => Some(Instruction {
            type_in: InType::InLdh,
            mode: AddrMode::AmA8r,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xE1 => Some(Instruction {
            type_in: InType::InPop,
            mode: AddrMode::AmR,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xE2 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmMrr,
            reg_1: RegType::RtC,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xE5 => Some(Instruction {
            type_in: InType::InPush,
            mode: AddrMode::AmR,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xE6 => Some(Instruction {
            type_in: InType::InAnd,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xE7 => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x20,
        }),
        0xE8 => Some(Instruction {
            type_in: InType::InAdd,
            mode: AddrMode::AmRD8,
            reg_1: RegType::RtSp,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xE9 => Some(Instruction {
            type_in: InType::InJp,
            mode: AddrMode::AmMr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xEA => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmA16r,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtA,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xEE => Some(Instruction {
            type_in: InType::InXor,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xEF => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x28,
        }),
        
        //0xFX
        0xF0 => Some(Instruction {
            type_in: InType::InLdh,
            mode: AddrMode::AmRa8,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xF1 => Some(Instruction {
            type_in: InType::InPop,
            mode: AddrMode::AmR,
            reg_1: RegType::RtAf,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xF2 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRMr,
            reg_1: RegType::RtA,
            reg_2: RegType::RtC,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xF3 => Some(Instruction {
            type_in: InType::InDi,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xF5 => Some(Instruction {
            type_in: InType::InPush,
            mode: AddrMode::AmR,
            reg_1: RegType::RtAf,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xF6 => Some(Instruction {
            type_in: InType::InOr,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xF7 => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x30,
        }),
        0xF8 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmHlspr,
            reg_1: RegType::RtHl,
            reg_2: RegType::RtSp,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xF9 => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmR,
            reg_1: RegType::RtSp,
            reg_2: RegType::RtHl,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xFA => Some(Instruction {
            type_in: InType::InLd,
            mode: AddrMode::AmRa16,
            reg_1: RegType::RtA,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xFB => Some(Instruction {
            type_in: InType::InEi,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xFE => Some(Instruction {
            type_in: InType::InCp,
            mode: AddrMode::AmD8,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0,
        }),
        0xFF => Some(Instruction {
            type_in: InType::InRst,
            mode: AddrMode::AmImp,
            reg_1: RegType::RtNone,
            reg_2: RegType::RtNone,
            cond: CondType::CtNone,
            param: 0x38,
        }),
        
        _ => panic!("Unknown Opcode: {:02X}", opcode), // Only panic here
    }
}

const INST_LOOKUP: [&str; 48] = [
    "<NONE>", "NOP", "LD", "INC", "DEC", "RLCA", "ADD", "RRCA", "STOP", "RLA", "JR", "RRA", "DAA",
    "CPL", "SCF", "CCF", "HALT", "ADC", "SUB", "SBC", "AND", "XOR", "OR", "CP", "POP", "JP",
    "PUSH", "RET", "CB", "CALL", "RETI", "LDH", "JPHL", "DI", "EI", "RST", "IN_ERR", "IN_RLC",
    "IN_RRC", "IN_RL", "IN_RR", "IN_SLA", "IN_SRA", "IN_SWAP", "IN_SRL", "IN_BIT", "IN_RES",
    "IN_SET",
];

// Function to lookup the instruction name based on `InType`
pub fn inst_name(t: &InType) -> &'static str {
    match t {
        InType::InNone => INST_LOOKUP[0],
        InType::InNop => INST_LOOKUP[1],
        InType::InLd => INST_LOOKUP[2],
        InType::InInc => INST_LOOKUP[3],
        InType::InDec => INST_LOOKUP[4],
        InType::InRlca => INST_LOOKUP[5],
        InType::InAdd => INST_LOOKUP[6],
        InType::InRrca => INST_LOOKUP[7],
        InType::InStop => INST_LOOKUP[8],
        InType::InRla => INST_LOOKUP[9],
        InType::InJr => INST_LOOKUP[10],
        InType::InRra => INST_LOOKUP[11],
        InType::InDaa => INST_LOOKUP[12],
        InType::InCpl => INST_LOOKUP[13],
        InType::InScf => INST_LOOKUP[14],
        InType::InCcf => INST_LOOKUP[15],
        InType::InHalt => INST_LOOKUP[16],
        InType::InAdc => INST_LOOKUP[17],
        InType::InSub => INST_LOOKUP[18],
        InType::InSbc => INST_LOOKUP[19],
        InType::InAnd => INST_LOOKUP[20],
        InType::InXor => INST_LOOKUP[21],
        InType::InOr => INST_LOOKUP[22],
        InType::InCp => INST_LOOKUP[23],
        InType::InPop => INST_LOOKUP[24],
        InType::InJp => INST_LOOKUP[25],
        InType::InPush => INST_LOOKUP[26],
        InType::InRet => INST_LOOKUP[27],
        InType::InCb => INST_LOOKUP[28],
        InType::InCall => INST_LOOKUP[29],
        InType::InReti => INST_LOOKUP[30],
        InType::InLdh => INST_LOOKUP[31],
        InType::InJphl => INST_LOOKUP[32],
        InType::InDi => INST_LOOKUP[33],
        InType::InEi => INST_LOOKUP[34],
        InType::InRst => INST_LOOKUP[35],
        InType::InErr => INST_LOOKUP[36],
        InType::InRlc => INST_LOOKUP[37],
        InType::InRrc => INST_LOOKUP[38],
        InType::InRl => INST_LOOKUP[39],
        InType::InRr => INST_LOOKUP[40],
        InType::InSla => INST_LOOKUP[41],
        InType::InSra => INST_LOOKUP[42],
        InType::InSwap => INST_LOOKUP[43],
        InType::InSrl => INST_LOOKUP[44],
        InType::InBit => INST_LOOKUP[45],
        InType::InRes => INST_LOOKUP[46],
        InType::InSet => INST_LOOKUP[47],
    }
}
